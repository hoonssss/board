debug: false
management.endpoints.web.exposure.include: "*"

logging:
  level:
    com.example.projectboard: debug
    org.springframework.web.servlet: debug
    org.hibernate.type.descriptor.sql.BasicBinder: trace

spring:
  datasource:
    url: jdbc:postgresql://localhost:5432/board
    username: ${spring_username}
    password: ${spring_password}
#    driver-class-name:
#  url: jdbc:h2:mem:testdb #h2 Test
#  username: sa #h2 Test
#  driver-class-name: org.h2.Driver #h2 Test
  jpa:
    defer-datasource-initialization: true #Test database date
    hibernate:
      ddl-auto: create
    show-sql: true #SQL, Query
    properties:
      hibernate:
        default_batch_fetch_size: 100
        format_sql: true #debug Query
    open-in-view: false # OSIV false
  h2.console.enabled: false #h2 console url - /h2-console
  sql.init.mode: always #data.sql
  data:
    rest:
      base-path: /api
      detection-strategy: annotated
  thymeleaf3:
    decoupled-logic: true
  security: #OAuth2.0
    oauth2:
      client:
        registration:
          kakao:
            client-id: ${kakao_client_id}
            client-secret: ${kakao_secret_key}
            authorization-grant-type: authorization_code
            redirect-uri: "{baseUrl}/login/oauth2/code/kakao"
            client-authentication-method: client_secret_post
        provider:
          kakao:
            authorization-uri: https://kauth.kakao.com/oauth/authorize
            token-uri: https://kauth.kakao.com/oauth/token
            user-info-uri: https://kapi.kakao.com/v2/user/me
            user-name-attribute: id

---

spring:
  config:
    activate:
      on-profile: heroku
  datasource:
    url: ${JAWSDB_URL}
  jpa:
    hibernate:
      ddl-auto: create
  sql.init.mode: always

#spring:
#  config.activate.on-profile: testdb #testdb
#  datasource:
#    url: jdbc:h2:mem:board;mode=mysql #mode = mysql -> mysql
#    driverClassName: org.h2.Driver
#  sql.init.mode: always
#  test.database.replace: none
